{"ast":null,"code":"var _jsxFileName = \"/Users/sanket/Documents/Gayatri-GitHub/online-quiz-app/online-quiz-app-frontend/src/components/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom'; // Import Link to add navigation\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Use useParams to get the quiz id\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [userName, setUserName] = useState(''); // State to store user's name\n  const [nameSubmitted, setNameSubmitted] = useState(false); // To track if the name is submitted\n\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/quizzes/${id}`);\n        setQuiz(response.data);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n      }\n    };\n    fetchQuiz();\n  }, [id]); // use id from useParams\n\n  const handleSubmitName = e => {\n    e.preventDefault();\n    if (userName.trim() !== '') {\n      setNameSubmitted(true); // If name is not empty, allow starting the quiz\n    }\n  };\n  const handleSubmitQuiz = async e => {\n    e.preventDefault();\n    try {\n      console.log('Submitting answers:', answers, 'User Name:', userName);\n      const response = await axios.post(`http://localhost:5001/quizzes/${quiz.id}/submit`, {\n        answers,\n        userName\n      });\n      setScore(response.data.score);\n      setSubmitted(true);\n    } catch (error) {\n      console.error('Error submitting answers:', error);\n    }\n  };\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-title\",\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), !nameSubmitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"name-form\",\n      onSubmit: handleSubmitName,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name-input\",\n        children: \"Enter your name to start the quiz:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name-input\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        className: \"name-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"start-quiz-button\",\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    /* Quiz form appears only after name is submitted */\n    _jsxDEV(\"form\", {\n      className: \"quiz-form\",\n      onSubmit: handleSubmitQuiz,\n      children: [quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"option-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question${index}`,\n            value: option,\n            onChange: e => setAnswers(prev => {\n              const newAnswers = [...prev];\n              newAnswers[index] = e.target.value;\n              return newAnswers;\n            }),\n            className: \"option-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this), option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [\"Your score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }, this), nameSubmitted && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/quiz/${id}/leaderboard`,\n      className: \"leaderboard-link\",\n      children: \"View Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"qasmDPfx72OQ9uCHnktSIbfCAuA=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Link","jsxDEV","_jsxDEV","Quiz","_s","id","quiz","setQuiz","answers","setAnswers","score","setScore","submitted","setSubmitted","userName","setUserName","nameSubmitted","setNameSubmitted","fetchQuiz","response","get","data","error","console","handleSubmitName","e","preventDefault","trim","handleSubmitQuiz","log","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onSubmit","htmlFor","type","value","onChange","target","required","questions","map","question","index","options","option","name","prev","newAnswers","to","_c","$RefreshReg$"],"sources":["/Users/sanket/Documents/Gayatri-GitHub/online-quiz-app/online-quiz-app-frontend/src/components/Quiz.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom'; // Import Link to add navigation\r\nimport './Quiz.css';\r\n\r\nconst Quiz = () => {\r\n    const { id } = useParams(); // Use useParams to get the quiz id\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [userName, setUserName] = useState(''); // State to store user's name\r\n    const [nameSubmitted, setNameSubmitted] = useState(false); // To track if the name is submitted\r\n\r\n    useEffect(() => {\r\n        const fetchQuiz = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5001/quizzes/${id}`);\r\n                setQuiz(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching quiz:', error);\r\n            }\r\n        };\r\n        fetchQuiz();\r\n    }, [id]); // use id from useParams\r\n\r\n    const handleSubmitName = (e) => {\r\n        e.preventDefault();\r\n        if (userName.trim() !== '') {\r\n            setNameSubmitted(true); // If name is not empty, allow starting the quiz\r\n        }\r\n    };\r\n\r\n    const handleSubmitQuiz = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log('Submitting answers:', answers, 'User Name:', userName);\r\n            const response = await axios.post(`http://localhost:5001/quizzes/${quiz.id}/submit`, { answers, userName });\r\n            setScore(response.data.score);\r\n            setSubmitted(true);\r\n        } catch (error) {\r\n            console.error('Error submitting answers:', error);\r\n        }\r\n    };\r\n\r\n    if (!quiz) return <div className=\"loading\">Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2 className=\"quiz-title\">{quiz.title}</h2>\r\n\r\n            {/* Name input form */}\r\n            {!nameSubmitted ? (\r\n                <form className=\"name-form\" onSubmit={handleSubmitName}>\r\n                    <label htmlFor=\"name-input\">Enter your name to start the quiz:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name-input\"\r\n                        value={userName}\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                        className=\"name-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"start-quiz-button\">Start Quiz</button>\r\n                </form>\r\n            ) : (\r\n                /* Quiz form appears only after name is submitted */\r\n                <form className=\"quiz-form\" onSubmit={handleSubmitQuiz}>\r\n                    {quiz.questions.map((question, index) => (\r\n                        <div key={index} className=\"question-block\">\r\n                            <p className=\"question-text\">{question.question}</p>\r\n                            {question.options.map((option) => (\r\n                                <label key={option} className=\"option-label\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={`question${index}`}\r\n                                        value={option}\r\n                                        onChange={(e) => setAnswers(prev => {\r\n                                            const newAnswers = [...prev];\r\n                                            newAnswers[index] = e.target.value;\r\n                                            return newAnswers;\r\n                                        })}\r\n                                        className=\"option-input\"\r\n                                    />\r\n                                    {option}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"submit\" className=\"submit-button\">Submit</button>\r\n                </form>\r\n            )}\r\n\r\n            {submitted && <div className=\"score-display\">Your score: {score}</div>}\r\n\r\n            {/* Add Leaderboard link here */}\r\n            {nameSubmitted && (\r\n                <Link to={`/quiz/${id}/leaderboard`} className=\"leaderboard-link\">View Leaderboard</Link>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}